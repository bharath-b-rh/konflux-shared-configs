name: 'Sync Konflux Pipeline Configurations'
description: 'Intelligently synchronizes local Tekton pipeline configurations with upstream Konflux build-definitions while preserving customizations'
author: 'Red Hat OpenShift Team'

inputs:
  auto_patch_missing_tasks:
    description: 'Automatically patch missing tasks using konflux-pipeline-patcher'
    required: false
    default: 'true'
  update_task_bundle_refs:
    description: 'Update task bundle references to latest versions'
    required: false
    default: 'false'
  github_token:
    description: 'GitHub token for creating PRs'
    required: true
  commit_message_prefix:
    description: 'Prefix for commit messages'
    required: false
    default: 'NO-JIRA: '
  pr_labels:
    description: 'Comma-separated list of labels for PRs'
    required: false
    default: 'dependencies,pipeline-sync,automated-pr'

outputs:
  updated:
    description: 'Whether any pipelines were updated'
    value: ${{ steps.sync.outputs.updated }}
  pipelines_processed:
    description: 'Number of pipelines processed'
    value: ${{ steps.sync.outputs.pipelines_processed }}
  missing_tasks_found:
    description: 'Whether missing tasks were found'
    value: ${{ steps.sync.outputs.missing_tasks_found }}
  missing_tasks_patched:
    description: 'Whether missing tasks were successfully patched'
    value: ${{ steps.sync.outputs.missing_tasks_patched }}
  pr_number:
    description: 'PR number if created'
    value: ${{ steps.create-pr.outputs.pull-request-number }}

runs:
  using: 'composite'
  steps:
    - name: Setup Git
      shell: bash
      run: |
        git config --global user.name 'Pipeline Sync Bot'
        git config --global user.email 'noreply@redhat.com'

    - name: Setup Python dependencies
      shell: bash
      run: |
        python3 -m pip install --user requests PyYAML

        - name: Prepare pipeline sync script
      shell: bash
      run: |
        # Create a wrapper script that sets environment variables for the main script
        cat > /tmp/sync-wrapper.py << 'EOF'
        #!/usr/bin/env python3
        import os
        import sys
        import subprocess
        
        # Set environment variables for the main script
        os.environ['GITHUB_ACTION_MODE'] = 'true'
        os.environ['AUTO_PATCH'] = "${{ inputs.auto_patch_missing_tasks }}"
        os.environ['UPDATE_REFS'] = "${{ inputs.update_task_bundle_refs }}"
        
        # Run the main script
        result = subprocess.run([sys.executable, 'scripts/sync-pipeline-configs.py'], 
                              capture_output=False, text=True)
        sys.exit(result.returncode)
        EOF
        
        chmod +x /tmp/sync-wrapper.py

    - name: Sync pipeline configurations
      id: sync
      shell: bash
      run: |
        python3 /tmp/sync-wrapper.py

    - name: Create Pull Request
      id: create-pr
      if: steps.sync.outputs.updated == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ inputs.github_token }}
        commit-message: "${{ inputs.commit_message_prefix }}Sync Konflux pipeline configurations with upstream"
        title: "Sync Konflux pipeline configurations from upstream"
        body: |
          This PR intelligently syncs Tekton pipeline configurations from upstream while preserving local customizations.
          
          **Changes:**
          ${{ steps.sync.outputs.changes_summary }}
          
          **Summary:**
          - 📄 Pipelines processed: ${{ steps.sync.outputs.pipelines_processed }}
          - 🔄 Updates made: ${{ steps.sync.outputs.updated }}
          - ⚠️ Missing tasks found: ${{ steps.sync.outputs.missing_tasks_found }}
          - 🔧 Missing tasks patched: ${{ steps.sync.outputs.missing_tasks_patched }}
          
          **Features:**
          - ✅ Preserves taskRef configurations (bundle URLs, SHA digests)
          - ✅ Preserves custom parameters (hermetic, build-source-image, build-args, build-platforms)
          - ✅ Auto-patches missing tasks: ${{ inputs.auto_patch_missing_tasks }}
          - ✅ Updates task bundle references: ${{ inputs.update_task_bundle_refs }}
          
          This update was automatically generated by the pipeline sync action.
        branch: sync-konflux-pipelines
        delete-branch: true
        labels: ${{ inputs.pr_labels }} 